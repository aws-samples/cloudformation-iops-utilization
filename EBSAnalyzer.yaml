AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ResultsBucketName:
    Description: Enter the bucket name to be used to deliver results
    Type: 'String'
    AllowedPattern: ^[a-z-0-9]+
  FunctionName:
    Description: Enter the lambda function name to be used
    Type: 'String'
    AllowedPattern: ^[a-z-0-9A-Z]+
  CodeBucketName:
    Description: Enter the bucket name where the code reside
    Type: 'String'
    AllowedPattern: ^[a-z-0-9]+
  CodeFileName:
    Description: Enter the code file name
    Type: 'String'
    AllowedPattern: ^[a-z.0-9]+
Resources:

  EBSLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "EBSLambdaRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
  RolePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "EBSLambdaPolicy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: "s3:PutObject"
            Resource: !Join
              - '/'
              - - !GetAtt ResultsS3Bucket.Arn
                - '*'
          -
            Effect: "Allow"
            Action: "cloudwatch:GetMetricData"
            Resource: "*"
          -
            Effect: "Allow"
            Action: "ec2:DescribeVolumes"
            Resource: "*"
          -
            Effect: "Allow"
            Action: "ec2:DescribeRegions"
            Resource: "*"
          -
            Effect: "Allow"
            Action: ["logs:CreateLogGroup","logs:CreateLogStream","logs:PutLogEvents"]
            Resource: "arn:aws:logs:*:*:*"
      Roles:
        -
          Ref: "EBSLambdaRole"
  ResultsS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: ResultsBucketName
  LambdaFunction:
        Type: AWS::Lambda::Function
        Properties:
          FunctionName:
            Ref: FunctionName
          Runtime: python3.7
          Timeout: 900
          Handler: index.lambda_handler
          Role: !GetAtt EBSLambdaRole.Arn
          Code:
            S3Bucket:
              Ref: "CodeBucketName"
            S3Key:
              Ref: "CodeFileName"
          Environment:
            Variables:
              resultsBucketName:
                Ref: ResultsBucketName
